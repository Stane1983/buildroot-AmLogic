From b21eb3c740dd9aac29ff0445cc58a8c3b98ebae7 Mon Sep 17 00:00:00 2001
From: JoeKar <fake@fake.mail>
Date: Wed, 10 Apr 2013 20:40:30 +0200
Subject: [PATCH] fix: Change startup caching mechanism and make hints change
 nicer

---
 xbmc/cores/dvdplayer/DVDDemuxers/DVDDemuxPVRClient.cpp | 14 +++++++-------
 xbmc/cores/dvdplayer/DVDPlayer.cpp                     | 13 ++++++++++---
 2 files changed, 17 insertions(+), 10 deletions(-)

diff --git a/xbmc/cores/dvdplayer/DVDDemuxers/DVDDemuxPVRClient.cpp b/xbmc/cores/dvdplayer/DVDDemuxers/DVDDemuxPVRClient.cpp
index 7291fa1..4d02d69 100644
--- a/xbmc/cores/dvdplayer/DVDDemuxers/DVDDemuxPVRClient.cpp
+++ b/xbmc/cores/dvdplayer/DVDDemuxers/DVDDemuxPVRClient.cpp
@@ -276,14 +276,14 @@ void CDVDDemuxPVRClient::ParsePacket(DemuxPacket* pkt)
         CHECK_UPDATE(stv, iWidth        , pvr->m_context->width , 0);
         CHECK_UPDATE(stv, iHeight       , pvr->m_context->height, 0);
 
-        if((pkt->duration > 0) && (pkt->duration != stv->iFpsScale))
+        if (pvr->m_context->sample_aspect_ratio.den > 0)
         {
-          CLog::Log(LOGDEBUG, "%s - {%d} iFpsScale changed from %d to %d",  __FUNCTION__, stv->iId, stv->iFpsScale, pkt->duration);
-          stv->iFpsScale = pkt->duration;
-          CLog::Log(LOGDEBUG, "%s - {%d} iFpsRate changed from %d to %d",  __FUNCTION__, stv->iId, stv->iFpsRate, DVD_TIME_BASE);
-          stv->iFpsRate = DVD_TIME_BASE;
-          stv->changes += 2;
-          stv->disabled = false;
+          CHECK_UPDATE(stv, fAspect     , ((float)(pvr->m_context->sample_aspect_ratio.num / pvr->m_context->sample_aspect_ratio.den)), 0);
+        }
+        if (pkt->duration > 0)
+        {
+          CHECK_UPDATE(stv, iFpsScale , pkt->duration , 0);
+          CHECK_UPDATE(stv, iFpsRate  , DVD_TIME_BASE , 0);
         }
         break;
       }
diff --git a/xbmc/cores/dvdplayer/DVDPlayer.cpp b/xbmc/cores/dvdplayer/DVDPlayer.cpp
index 191df88..f6d59ca 100644
--- a/xbmc/cores/dvdplayer/DVDPlayer.cpp
+++ b/xbmc/cores/dvdplayer/DVDPlayer.cpp
@@ -1493,13 +1493,20 @@ void CDVDPlayer::HandlePlaySpeed()
     bool bGotVideo(m_pDemuxer->GetNrOfVideoStreams() > 0);
     bool bAudioLevelOk(m_dvdPlayerAudio.GetLevel() > g_advancedSettings.m_iPVRMinAudioCacheLevel);
     bool bVideoLevelOk(m_dvdPlayerVideo.GetLevel() > g_advancedSettings.m_iPVRMinVideoCacheLevel);
-    bool bAudioFull(!m_dvdPlayerAudio.AcceptsData());
-    bool bVideoFull(!m_dvdPlayerVideo.AcceptsData());
+    //bool bAudioFull(!m_dvdPlayerAudio.AcceptsData());
+    //bool bVideoFull(!m_dvdPlayerVideo.AcceptsData());
 
+#if 0
     if (/* if all streams got at least g_advancedSettings.m_iPVRMinCacheLevel in their buffers, we're done */
         ((bGotVideo || bGotAudio) && (!bGotAudio || bAudioLevelOk) && (!bGotVideo || bVideoLevelOk)) ||
         /* or if one of the buffers is full */
-        (bAudioFull || bVideoFull))
+        ((bAudioFull && (!bGotVideo || bVideoLevelOk)) || (bVideoFull && (!bGotAudio || bAudioLevelOk))))
+#endif
+    if (/* if all streams got at least g_advancedSettings.m_iPVRMinCacheLevel in their buffers, we're done */
+        /* Short version of the extended condition above:
+         * Video buffer could be full, before audio has reached his minimum and vice versa -> fail again!
+         * Result: Everything depends on availability or min. buffer level. */
+        (!bGotAudio || bAudioLevelOk) && (!bGotVideo || bVideoLevelOk))
     {
       CLog::Log(LOGDEBUG, "set caching from pvr to done. audio (%d) = %d. video (%d) = %d",
           bGotAudio, m_dvdPlayerAudio.GetLevel(),
-- 
1.8.1.5

